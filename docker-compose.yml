services:
  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - champzone-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - champzone-network

  postgres-server:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "6543:5432"
    volumes:
      - ./dbscripts:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - champzone-network

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${EMAIL_USERNAME}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - champzone-network


#  frontend:
#    build: ./frontend
#    environment:
#      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
#    ports:
#      - "3000:3000"
#    networks:
#      - champzone-network

#  nginx:
#    image: nginx:latest
#    ports:
#      - "8080:80"
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
##      - frontend
#      - api-gateway
##      - coach-service
##      - client-service
##      - training-service
#    networks:
#      - champzone-network


  api-gateway:
    build: ./api-gateway
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-server:5432/api_gateway_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      SPRING_KEYCLOAK_ISSUER_URL: ${KEYCLOAK_ISSUER_URL}
      SPRING_KEYCLOAK_CERTS_URL: ${KEYCLOAK_CERTS_URL}
    ports:
      - "8888:8080"
    depends_on:
      - keycloak
#      - training-service
#      - coach-service
#      - client-service
    networks:
      - champzone-network

  coach-service:
    build: ./coach-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-server:5432/coach_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      GRPC_NOTIFICATION_SERVICE_HOST: ${GRPC_NOTIFICATION_SERVICE_HOST}
#      GRPC_NOTIFICATION_SERVICE_PORT: ${GRPC_NOTIFICATION_SERVICE_PORT}
      GRPC_NOTIFICATION_SERVICE_PORT: ${GRPC_PORT}
    expose:
      - 8080
      - ${GRPC_PORT}
    depends_on:
#      - kafka
      - postgres-server
    networks:
      - champzone-network

  training-service:
    build: ./training-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-server:5432/training_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
#      - kafka
      - postgres-server
    expose:
      - 8080
      - ${GRPC_PORT}
    networks:
      - champzone-network

  client-service:
    build: ./client-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-server:5432/client_service_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
#      - kafka
      - postgres-server
    networks:
      - champzone-network

  notification-service:
    build: ./notification-service
    environment:
      MAIL_PROTOCOL: ${MAIL_PROTOCOL}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
#      GRPC_SERVER_PORT: ${GRPC_NOTIFICATION_SERVICE_PORT}
      GRPC_SERVER_PORT: ${GRPC_PORT}
    expose:
      - ${GRPC_PORT}
    networks:
      - champzone-network


  keycloak:
    build: ./keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-server:5432/keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HTTP_PORT: 6060
      KC_HTTP_ENABLED: true
#      KC_HTTP_ENABLED: false
      KC_PROXY: edge
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: DEBUG
#      KC_HOSTNAME_STRICT_HTTPS: true
      PROXY_ADDRESS_FORWARDING: false
      KC_LOG_CONSOLE_COLOR: true
    ports:
      - "6060:6060"
    depends_on:
      postgres-server:
        condition: service_healthy
    networks:
      - champzone-network


  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - champzone-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "4000:4000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - champzone-network


volumes:
  postgres_data:

networks:
  champzone-network:
    driver: bridge